services:
  watchtower:
    container_name: watchtower
    image: containrrr/watchtower
    network_mode: host
    environment:
      NO_COLOR: true
      TZ: "Asia/Bangkok"
      WATCHTOWER_CLEANUP: true
      WATCHTOWER_INCLUDE_RESTARTING: true
      WATCHTOWER_INCLUDE_STOPPED: false
      WATCHTOWER_LOG_FORMAT: pretty
      WATCHTOWER_ROLLING_RESTART: true
      WATCHTOWER_HTTP_API_METRICS: false
      WATCHTOWER_SCHEDULE: "0 0 */2 * * *"
      WATCHTOWER_NOTIFICATION_URL: "discord://${DISCORD_WEBHOOK_TOKEN}@${DISCORD_WEBHOOK_CHANNEL_ID}"
      WATCHTOWER_NOTIFICATION_TEMPLATE: |-
        {{range .}}{{.Time.Format "12-01-2020 15:04:05"}} ({{.Level}})':' {{.Message}}{{println}}{{end}}
      WATCHTOWER_NOTIFICATIONS: shoutrrr
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    
  npm-app:
    image: 'jc21/nginx-proxy-manager:latest'
    container_name: npm-app
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
      - '81:81'
    environment:
      DB_MYSQL_HOST: "npm-db"
      DB_MYSQL_PORT: 3306
      DB_MYSQL_USER: "${DB_USER}"
      DB_MYSQL_PASSWORD: "${DB_PASSWORD}"
      DB_MYSQL_NAME: "${DB_NAME}"
      DISABLE_IPV6: 'true'
    volumes:
      - ./data:/data
      - ./letsencrypt:/etc/letsencrypt
    depends_on:
      - npm-db

  npm-db:
    image: 'jc21/mariadb-aria:latest'
    container_name: npm-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_ROOT_PASSWORD}'
      MYSQL_DATABASE: '${DB_NAME}'
      MYSQL_USER: '${DB_USER}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
      MARIADB_AUTO_UPGRADE: '1'
    volumes:
      - ./mariadb:/var/lib/mysql

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      PUID: 1000
      PGID: 1000
      TZ: Asia/Bangkok
      WEBUI_PORT: 8080
      TORRENTING_PORT: 6881
      DOCKER_MODS: ghcr.io/vuetorrent/vuetorrent-lsio-mod:latest
    volumes:
      - ${DOCKER_DATA}/qbittorrent:/config
      - ${DATA}/TorrentDownload:/downloads:rw,rshared
    ports:
      - 8080:8080
      - 6881:6881
      - 6881:6881/udp
    restart: unless-stopped
    
  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    environment:
      PUID: 1000
      PGID: 1000
      TZ: Asia/Bangkok
    volumes:
      - ${DOCKER_DATA}/jellyfin/library:/config
      - ${ANIME_DIR}/tvseries:/data/tvshows:rw,rshared
      - ${ANIME_DIR}/movies:/data/movies:rw,rshared
    ports:
      - 8096:8096
    restart: unless-stopped
    # might use radarr and sonarr in future but not for now.

  kavita:
    image: lscr.io/linuxserver/kavita:latest
    container_name: kavita
    environment:
      PUID: 1000
      PGID: 1000
      TZ: Asia/Bangkok
      DOTNET_SYSTEM_GLOBALIZATION_INVARIANT: true
    volumes:
      - ${DOCKER_DATA}/kavita/config:/config
      - ${DATA}:/data:rw,rshared
    ports:
      - 5000:5000
    restart: unless-stopped
    
  filebrowser:
    image: hurlenko/filebrowser
    container_name: filebrowser
    restart: unless-stopped
    environment:
      PUID: 1000
      PGID: 1000
      FB_BASEURL: /filebrowser
    ports:
      - 5001:8080
    expose:
      - 5001
    volumes:
      - ${DOCKER_DATA}/filebrowser:/config
      - ${DATA}:/data:rw,rshared
